--------------------------------

--- ${comment}
#if $min_args > 0 
    #set $count = 0
    #for $arg in $arguments
        #set $argValue = "arg" + str(count)
        #if $arg.is_enum
---@param $argumtntTips[$count] number
        #else
			#set $param_type = $generator.lua_typename_from_natve($arg.namespaced_name, False, $arg)
			#if str($param_type) == "color4b_table"
				#set $param_type = "lstg.Color"
			#end if
---@param $argumtntTips[$count] $param_type
        #end if
        #set $count = $count + 1
    #end for
#end if
#if str($ret_type) != "void"
    #if $ret_type.is_enum
---@return number
    #else
		#set $return_type = $generator.lua_typename_from_natve($ret_type.namespaced_name, True)
		#if str($return_type) == "color4b_table"
			#set $return_type = "lstg.Color"
		#end if
---@return $return_type
    #end if
#else
---@return $generator.lua_typename_from_natve($namespaced_class_name, True)
#end if
#set $fargs = ""
#if $min_args > 0 
    #set $count = 0
    #for $arg in $arguments
        #if $count == 0
            #set $fargs = $fargs + $argumtntTips[$count]
        #else
            #set $fargs = $fargs + ", " + $argumtntTips[$count]
        #end if
        #set $count = $count + 1
    #end for
#end if
#set $fname = $func_name
#if $fname == "end"
    #set $fname = "endToLua"
#end if
function ${class_name}:${fname}(${fargs})
end

